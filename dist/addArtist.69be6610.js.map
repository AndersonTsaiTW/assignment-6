{"mappings":"AAAA;;;;;;;;;;;;;CAaC,GAED,OAAO,MAAM,GAAG;IACd,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,MAAM,iBAAiB,SAAS,cAAc,CAAC;IAE/C,8BAA8B;IAC9B,IAAI,aAAa,gBACf,6BAA6B;IAC7B,UAAU,gBAAgB,CAAC,SAAS;QAClC,0BAA0B;QAC1B,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,WAAW,SAAS,GAAG;QAEvB,8BAA8B;QAC9B,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,SAAS,SAAS,GAAG;QACrB,SAAS,IAAI,GAAG;QAChB,SAAS,IAAI,GAAG;QAChB,SAAS,WAAW,GAAG;QAEvB,2BAA2B;QAC3B,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAC7C,MAAM,mBAAmB,SAAS,aAAa,CAAC;QAChD,iBAAiB,SAAS,GAAG;QAC7B,iBAAiB,IAAI,GAAG;QACxB,iBAAiB,IAAI,GAAG;QACxB,cAAc,WAAW,CAAC;QAC1B,cAAc,WAAW,CAAC,SAAS,cAAc,CAAC;QAElD,2BAA2B;QAC3B,WAAW,WAAW,CAAC;QACvB,WAAW,WAAW,CAAC;QAEvB,+BAA+B;QAC/B,eAAe,WAAW,CAAC;IAC7B;IAGF,yBAAyB;IACzB,MAAM,OAAO,SAAS,aAAa,CAAC;IAEpC,KAAK,gBAAgB,CAAC,UAAU,SAAU,CAAC;QACzC,EAAE,cAAc;QAGhB,+BAA+B;QAC/B,MAAM,YAAY,SAAS,aAAa,CAAC,iBAAiB,KAAK;QAC/D,MAAM,cAAc,EAAE;QAEtB,MAAM,QAAQ,UACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,IACf,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,GAAG;QAE1B,uCAAuC;QACvC,MAAM,WAAW;QACjB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO;gBACxB,MAAM,CAAC,iDAAiD,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC5E;YACF;YACA,YAAY,IAAI,CAAC;QACnB;QAEA,uCAAuC;QACvC,MAAM,aAAa,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,gBACrD,GAAG,CAAC,CAAA,QAAS,MAAM,KAAK,CAAC,IAAI,IAC7B,MAAM,CAAC,CAAA,MAAO,IAAI,MAAM,GAAG;QAE9B,MAAM,qBAAqB,SAAS,gBAAgB,CAAC;QACrD,MAAM,gBAAgB,EAAE;QAExB,mBAAmB,OAAO,CAAC,CAAC;YAC1B,cAAc,IAAI,CAAC,SAAS,OAAO;QACrC;QAEA,cAAc;QACd,MAAM,aAAa,KAAK,UAAU,CAAC,KAAK;QACxC,MAAM,QAAQ,KAAK,KAAK,CAAC,KAAK;QAC9B,MAAM,cAAc,KAAK,WAAW,CAAC,KAAK;QAE1C,MAAM,SAAS;YACb;YACA;YACA;YACA;YACA;YACA;QACF;QAEA,oDAAoD;QACpD,IAAI,SAAS,KAAK,aAAa,CAAC;QAChC,OAAO,KAAK,GAAG,KAAK,SAAS,CAAC;QAE9B,KAAK,MAAM;IACb;AAEF","sources":["src/js/addArtist.js"],"sourcesContent":["/**\r\n * WEB222 â€“ Assignment 06\r\n *\r\n * I declare that this assignment is my own work in accordance with\r\n * Seneca Academic Policy. No part of this assignment has been\r\n * copied manually or electronically from any other source\r\n * (including web sites) or distributed to other students.\r\n *\r\n * Please update the following with your information:\r\n *\r\n *      Name:       Anderson Yu-Hong Cai\r\n *      Student ID: 109262246\r\n *      Date:       2025/4/2\r\n */\r\n\r\nwindow.onload = function () {\r\n  const addButton = document.getElementById(\"add-media\");\r\n  const mediaContainer = document.getElementById(\"media-container\");\r\n\r\n  // create more input for songs\r\n  if (addButton && mediaContainer) {\r\n    // add more songs/videos urls\r\n    addButton.addEventListener(\"click\", () => {\r\n      // create .media-block div\r\n      const mediaBlock = document.createElement(\"div\");\r\n      mediaBlock.className = \"media-block\";\r\n\r\n      // create URL for songs/videos\r\n      const urlInput = document.createElement(\"input\");\r\n      urlInput.className = \"media-link\";\r\n      urlInput.type = \"url\";\r\n      urlInput.name = \"mediaLinks[]\";\r\n      urlInput.placeholder = \"e.g., https://www.youtube.com/song\";\r\n\r\n      // create explicit checkbox\r\n      const explicitLabel = document.createElement(\"label\");\r\n      const explicitCheckbox = document.createElement(\"input\");\r\n      explicitCheckbox.className = \"explicit-flag\";\r\n      explicitCheckbox.type = \"checkbox\";\r\n      explicitCheckbox.name = \"explicitFlags[]\";\r\n      explicitLabel.appendChild(explicitCheckbox);\r\n      explicitLabel.appendChild(document.createTextNode(\" explicit\"));\r\n\r\n      // add labels to mediaBlock\r\n      mediaBlock.appendChild(urlInput);\r\n      mediaBlock.appendChild(explicitLabel);\r\n\r\n      // add media block to container\r\n      mediaContainer.appendChild(mediaBlock);\r\n    });\r\n  }\r\n\r\n  // adjust for submit data\r\n  const form = document.querySelector(\"#newArtist-form\");\r\n\r\n  form.addEventListener(\"submit\", function (e) {\r\n    e.preventDefault();\r\n\r\n\r\n    // deal with social media links\r\n    const socialRaw = document.querySelector(\"#social-media\").value;\r\n    const socialMedia = [];\r\n\r\n    const links = socialRaw\r\n      .split(\",\")\r\n      .map(s => s.trim())\r\n      .filter(s => s.length > 0);\r\n\r\n    // check the social media link is valid\r\n    const urlRegex = /^((https?:\\/\\/)?[\\w-]+\\.[\\w.-]+)/i;\r\n    for (let i = 0; i < links.length; i++) {\r\n      const link = links[i];\r\n      if (!urlRegex.test(link)) {\r\n        alert(`Invalid social media link found:\\n\\nSocial Link #${i + 1}: \"${link}\"`);\r\n        return;\r\n      }\r\n      socialMedia.push(link);\r\n    }\r\n\r\n    // get all songs urls and mark explicit\r\n    const mediaLinks = Array.from(document.querySelectorAll(\".media-link\"))\r\n      .map(input => input.value.trim())\r\n      .filter(url => url.length > 0);\r\n\r\n    const explicitCheckboxes = document.querySelectorAll(\".explicit-flag\");\r\n    const explicitFlags = [];\r\n\r\n    explicitCheckboxes.forEach((checkbox) => {\r\n      explicitFlags.push(checkbox.checked);\r\n    });\r\n\r\n    // other input\r\n    const artistName = form.artistName.value;\r\n    const genre = form.genre.value;\r\n    const description = form.description.value;\r\n\r\n    const output = {\r\n      artistName,\r\n      genre,\r\n      description,\r\n      mediaLinks,\r\n      explicitFlags,  // [true, false, true]\r\n      socialMedia     // array\r\n    };\r\n\r\n    // output turn to JSON string put it to hidden input\r\n    let hidden = form.querySelector(\"#formattedData\");\r\n    hidden.value = JSON.stringify(output);\r\n\r\n    form.submit();\r\n  });\r\n\r\n};\r\n"],"names":[],"version":3,"file":"addArtist.69be6610.js.map","sourceRoot":"/__parcel_source_root/"}