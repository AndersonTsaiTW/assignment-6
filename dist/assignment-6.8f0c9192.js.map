{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["/**\n * WEB222 â€“ Assignment 06\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       Anderson Yu-Hong Cai\n *      Student ID: 109262246\n *      Date:       2025/4/2\n */\n\n// All of our data is available on the global `window` object.\n// Create local variables to work with it in this file.\nconst { artists, songs } = window; // Destructuring Assignment\n\n// For debugging, display all of our data in the console. You can remove this later.\nconsole.log({ artists, songs }, \"App Data\"); // leave here to check it can work correctly\n\nwindow.onload = function () {\n  if (!artists) {\n    console.error(\"No artists found!\");\n    return;\n  }\n\n  const menu = document.querySelector(\"#menu\");\n  const selectedArtist = document.querySelector(\"#selected-artist\");\n  const cardContainer = document.querySelector(\"#card-container\");\n\n  artists.forEach((artist) => {\n    const button = document.createElement(\"button\");\n    let textNode = document.createTextNode(artist.name);\n    button.appendChild(textNode);\n    button.addEventListener(\"click\", () => showArtistInfo(artist));\n    menu.appendChild(button);\n  });\n\n  showArtistInfo(artists[0]); // default to the first one\n\n  // choose artist and show their details\n  function showArtistInfo(artist) {\n    // console.log(artist);\n\n    let artistInfoHTML = artist.name + \"(\";\n    let linkInfoHTML = artist.links\n      .map((link) => {\n        return `<a href=${link.url} target=\"_blank\">${link.displayName}</a>`;\n      })\n      .join(\", \"); // map to return a list and join to combine them\n    artistInfoHTML += linkInfoHTML + \")\";\n\n    selectedArtist.innerHTML = artistInfoHTML;\n\n    // clean card container\n    cardContainer.innerHTML = \"\";\n\n    let filteredSongs = songs.filter(\n      (song) => song.artistId === artist.artistId && !song.explicit,\n    );\n\n    if (filteredSongs.length === 0) {\n      cardContainer.innerHTML = `<p>No available songs</p>`;\n      return;\n    }\n\n    filteredSongs.forEach((song) => {\n      cardContainer.appendChild(createSongCard(song));\n    });\n\n    function convertLanguageCodes(langCode) {\n      let langNames = new Intl.DisplayNames([\"en\"], { type: \"language\" });\n      return langCode.map((code) => langNames.of(code)).join(\", \"); // turn to string and combine\n    }\n\n    function formatTime(length) {\n      return `${Math.floor(length / 60)}:${length % 60 < 10 ? \"0\" + (length % 60) : length % 60} `;\n    }\n\n    // assignment 5: add cards\n    function createSongCard(song) {\n      // Create a <div> to hold the card\n      const card = document.createElement(\"div\");\n      // Add the .card class to the <div>\n      card.classList.add(\"card\");\n\n      // Create a song image, use the .card-image class\n      // Also, the img should be a link\n      const songLink = document.createElement(\"a\");\n      songLink.href = song.link;\n      songLink.target = \"_blank\";\n\n      const songImg = document.createElement(\"img\");\n      songImg.src = song.imageUrl;\n      songImg.alt = `Image: ${song.title}`;\n      songImg.classList.add(\"card-image\");\n      songLink.appendChild(songImg);\n\n      card.appendChild(songLink);\n\n      // Song Title\n      const title = document.createElement(\"h3\");\n      title.classList.add(\"card-title\");\n      title.textContent = song.title;\n      card.appendChild(title);\n\n      // === Footer wrapper ===\n      const footer = document.createElement(\"div\");\n      footer.classList.add(\"card-footer\");\n\n      // --- Left side (year + language) ---\n      const footerLeft = document.createElement(\"div\");\n      footerLeft.classList.add(\"card-footer-left\");\n\n      const time = document.createElement(\"time\");\n      time.textContent = song.year;\n\n      const lang = document.createElement(\"span\");\n      lang.classList.add(\"lang\");\n      lang.textContent = convertLanguageCodes(song.lang); // song.lang is an array\n\n      footerLeft.appendChild(time);\n      footerLeft.appendChild(lang);\n\n      // --- Right side (duration) ---\n      const footerRight = document.createElement(\"div\");\n      footerRight.classList.add(\"card-footer-right\");\n\n      const duration = document.createElement(\"span\");\n      duration.classList.add(\"duration\");\n      duration.textContent = formatTime(song.length);\n\n      footerRight.appendChild(duration);\n\n      // combine left and right to footer\n      footer.appendChild(footerLeft);\n      footer.appendChild(footerRight);\n\n      // put it to card\n      card.appendChild(footer);\n\n      // Return the card\n      return card;\n    }\n  }\n};\n"],"names":[],"version":3,"file":"assignment-6.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}