{"mappings":"ACeA,OAAO,MAAM,CAAG,WACd,IAAM,EAAY,SAAS,cAAc,CAAC,aACpC,EAAiB,SAAS,cAAc,CAAC,kBAG3C,CAAA,GAAa,GAEf,EAAU,gBAAgB,CAAC,QAAS,KAElC,IAAM,EAAa,SAAS,aAAa,CAAC,MAC1C,CAAA,EAAW,SAAS,CAAG,cAGvB,IAAM,EAAW,SAAS,aAAa,CAAC,QACxC,CAAA,EAAS,SAAS,CAAG,aACrB,EAAS,IAAI,CAAG,MAChB,EAAS,IAAI,CAAG,eAChB,EAAS,WAAW,CAAG,qCAGvB,IAAM,EAAgB,SAAS,aAAa,CAAC,SACvC,EAAmB,SAAS,aAAa,CAAC,QAChD,CAAA,EAAiB,SAAS,CAAG,gBAC7B,EAAiB,IAAI,CAAG,WACxB,EAAiB,IAAI,CAAG,kBACxB,EAAc,WAAW,CAAC,GAC1B,EAAc,WAAW,CAAC,SAAS,cAAc,CAAC,cAGlD,EAAW,WAAW,CAAC,GACvB,EAAW,WAAW,CAAC,GAGvB,EAAe,WAAW,CAAC,EAC7B,GAIF,IAAM,EAAO,SAAS,aAAa,CAAC,mBAEpC,EAAK,gBAAgB,CAAC,SAAU,SAAU,CAAC,EACzC,EAAE,cAAc,GAGhB,IAAM,EAAY,SAAS,aAAa,CAAC,iBAAiB,KAAK,CACzD,EAAc,EAAE,CAEhB,EAAQ,EACX,KAAK,CAAC,KACN,GAAG,CAAC,AAAC,GAAM,EAAE,IAAI,IACjB,MAAM,CAAC,AAAC,GAAM,EAAE,MAAM,CAAG,GAGtB,EAAW,oCAEjB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACrC,IAAM,EAAO,CAAK,CAAC,EAAE,CACrB,GAAI,CAAC,EAAS,IAAI,CAAC,GAAO,YACxB,MACE,CAAC;AAAA;AAAA,aAAiD,EAAE,EAAI,EAAE,GAAG,EAAE,EAAK,CAAC,CAAC,EAI1E,EAAY,IAAI,CAAC,EACnB,CAGA,IAAM,EAAa,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,gBACrD,GAAG,CAAC,AAAC,GAAU,EAAM,KAAK,CAAC,IAAI,IAC/B,MAAM,CAAC,AAAC,GAAQ,EAAI,MAAM,CAAG,GAE1B,EAAqB,SAAS,gBAAgB,CAAC,kBAC/C,EAAgB,EAAE,CAExB,EAAmB,OAAO,CAAC,AAAC,IAC1B,EAAc,IAAI,CAAC,EAAS,OAAO,CACrC,GAGA,IAAM,EAAa,EAAK,UAAU,CAAC,KAAK,CAClC,EAAQ,EAAK,KAAK,CAAC,KAAK,CACxB,EAAc,EAAK,WAAW,CAAC,KAAK,AAa1C,CADa,EAAK,aAAa,CAAC,kBACzB,KAAK,CAAG,KAAK,SAAS,CAXd,CACb,WAAA,EACA,MAAA,EACA,YAAA,EACA,WAAA,EACA,cAAA,EACA,YAAA,CACF,GAMA,EAAK,MAAM,EACb,EACF","sources":["<anon>","src/js/addArtist.js"],"sourcesContent":["/**\n * WEB222 – Assignment 06\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       Anderson Yu-Hong Cai\n *      Student ID: 109262246\n *      Date:       2025/4/2\n */ window.onload = function() {\n    const addButton = document.getElementById(\"add-media\");\n    const mediaContainer = document.getElementById(\"media-container\");\n    // create more input for songs\n    if (addButton && mediaContainer) // add more songs/videos urls\n    addButton.addEventListener(\"click\", ()=>{\n        // create .media-block div\n        const mediaBlock = document.createElement(\"div\");\n        mediaBlock.className = \"media-block\";\n        // create URL for songs/videos\n        const urlInput = document.createElement(\"input\");\n        urlInput.className = \"media-link\";\n        urlInput.type = \"url\";\n        urlInput.name = \"mediaLinks[]\";\n        urlInput.placeholder = \"e.g., https://www.youtube.com/song\";\n        // create explicit checkbox\n        const explicitLabel = document.createElement(\"label\");\n        const explicitCheckbox = document.createElement(\"input\");\n        explicitCheckbox.className = \"explicit-flag\";\n        explicitCheckbox.type = \"checkbox\";\n        explicitCheckbox.name = \"explicitFlags[]\";\n        explicitLabel.appendChild(explicitCheckbox);\n        explicitLabel.appendChild(document.createTextNode(\" explicit\"));\n        // add labels to mediaBlock\n        mediaBlock.appendChild(urlInput);\n        mediaBlock.appendChild(explicitLabel);\n        // add media block to container\n        mediaContainer.appendChild(mediaBlock);\n    });\n    // adjust for submit data\n    const form = document.querySelector(\"#newArtist-form\");\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        // deal with social media links\n        const socialRaw = document.querySelector(\"#social-media\").value;\n        const socialMedia = [];\n        const links = socialRaw.split(\",\").map((s)=>s.trim()).filter((s)=>s.length > 0);\n        // check the social media link is valid\n        const urlRegex = /^((https?:\\/\\/)?[\\w-]+\\.[\\w.-]+)/i;\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            if (!urlRegex.test(link)) {\n                alert(`Invalid social media link found:\\n\\nSocial Link #${i + 1}: \"${link}\"`);\n                return;\n            }\n            socialMedia.push(link);\n        }\n        // get all songs urls and mark explicit\n        const mediaLinks = Array.from(document.querySelectorAll(\".media-link\")).map((input)=>input.value.trim()).filter((url)=>url.length > 0);\n        const explicitCheckboxes = document.querySelectorAll(\".explicit-flag\");\n        const explicitFlags = [];\n        explicitCheckboxes.forEach((checkbox)=>{\n            explicitFlags.push(checkbox.checked);\n        });\n        // other input\n        const artistName = form.artistName.value;\n        const genre = form.genre.value;\n        const description = form.description.value;\n        const output = {\n            artistName,\n            genre,\n            description,\n            mediaLinks,\n            explicitFlags,\n            socialMedia\n        };\n        // output turn to JSON string put it to hidden input\n        let hidden = form.querySelector(\"#formattedData\");\n        hidden.value = JSON.stringify(output);\n        form.submit();\n    });\n};\n\n//# sourceMappingURL=addArtist.ada1b06d.js.map\n","/**\n * WEB222 – Assignment 06\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       Anderson Yu-Hong Cai\n *      Student ID: 109262246\n *      Date:       2025/4/2\n */\n\nwindow.onload = function () {\n  const addButton = document.getElementById(\"add-media\");\n  const mediaContainer = document.getElementById(\"media-container\");\n\n  // create more input for songs\n  if (addButton && mediaContainer) {\n    // add more songs/videos urls\n    addButton.addEventListener(\"click\", () => {\n      // create .media-block div\n      const mediaBlock = document.createElement(\"div\");\n      mediaBlock.className = \"media-block\";\n\n      // create URL for songs/videos\n      const urlInput = document.createElement(\"input\");\n      urlInput.className = \"media-link\";\n      urlInput.type = \"url\";\n      urlInput.name = \"mediaLinks[]\";\n      urlInput.placeholder = \"e.g., https://www.youtube.com/song\";\n\n      // create explicit checkbox\n      const explicitLabel = document.createElement(\"label\");\n      const explicitCheckbox = document.createElement(\"input\");\n      explicitCheckbox.className = \"explicit-flag\";\n      explicitCheckbox.type = \"checkbox\";\n      explicitCheckbox.name = \"explicitFlags[]\";\n      explicitLabel.appendChild(explicitCheckbox);\n      explicitLabel.appendChild(document.createTextNode(\" explicit\"));\n\n      // add labels to mediaBlock\n      mediaBlock.appendChild(urlInput);\n      mediaBlock.appendChild(explicitLabel);\n\n      // add media block to container\n      mediaContainer.appendChild(mediaBlock);\n    });\n  }\n\n  // adjust for submit data\n  const form = document.querySelector(\"#newArtist-form\");\n\n  form.addEventListener(\"submit\", function (e) {\n    e.preventDefault();\n\n    // deal with social media links\n    const socialRaw = document.querySelector(\"#social-media\").value;\n    const socialMedia = [];\n\n    const links = socialRaw\n      .split(\",\")\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n\n    // check the social media link is valid\n    const urlRegex = /^((https?:\\/\\/)?[\\w-]+\\.[\\w.-]+)/i;\n\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i];\n      if (!urlRegex.test(link)) {\n        alert(\n          `Invalid social media link found:\\n\\nSocial Link #${i + 1}: \"${link}\"`,\n        );\n        return;\n      }\n      socialMedia.push(link);\n    }\n\n    // get all songs urls and mark explicit\n    const mediaLinks = Array.from(document.querySelectorAll(\".media-link\"))\n      .map((input) => input.value.trim())\n      .filter((url) => url.length > 0);\n\n    const explicitCheckboxes = document.querySelectorAll(\".explicit-flag\");\n    const explicitFlags = [];\n\n    explicitCheckboxes.forEach((checkbox) => {\n      explicitFlags.push(checkbox.checked);\n    });\n\n    // other input\n    const artistName = form.artistName.value;\n    const genre = form.genre.value;\n    const description = form.description.value;\n\n    const output = {\n      artistName,\n      genre,\n      description,\n      mediaLinks,\n      explicitFlags, // [true, false, true]\n      socialMedia, // array\n    };\n\n    // output turn to JSON string put it to hidden input\n    let hidden = form.querySelector(\"#formattedData\");\n    hidden.value = JSON.stringify(output);\n\n    form.submit();\n  });\n};\n"],"names":["window","onload","addButton","document","getElementById","mediaContainer","addEventListener","mediaBlock","createElement","className","urlInput","type","name","placeholder","explicitLabel","explicitCheckbox","appendChild","createTextNode","form","querySelector","e","preventDefault","socialRaw","value","socialMedia","links","split","map","s","trim","filter","length","urlRegex","i","link","test","alert","push","mediaLinks","Array","from","querySelectorAll","input","url","explicitCheckboxes","explicitFlags","forEach","checkbox","checked","artistName","genre","description","hidden","JSON","stringify","submit"],"version":3,"file":"addArtist.ada1b06d.js.map"}